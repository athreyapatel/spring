package com.rakuten.prj.client;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.rakuten.prj.entity.Article;

/**
 * @author athreya
 *
 */
public class ArticleClient {
	/**
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub
	    List<Article> articles = new ArrayList<>();
        articles.add(new Article("NoDBA",561,"bliki",Arrays.asList("nosql","people","orm")));
        articles.add(new Article("Infodesk",1145,"bliki",Arrays.asList("nosql","writing")));
        articles.add(new Article("OrmHate",1718,"bliki",Arrays.asList("nosql","orm")));
        articles.add(new Article("ruby",1313,"article",Arrays.asList("ruby")));
        articles.add(new Article("DDD_Aggregate",482,"bliki",Arrays.asList("nosql","ddd")));
        
        int a=articles.stream().map(p->p.getWords()).reduce(0,(v1,v2)->v1+v2);
        System.out.println(a);
        //Child collection to get in stream of data
        articles.stream().map(p->p.getTags()).forEach(System.out::println);
        
        //Flat map does the thing mentioned in the above method
        articles.stream().flatMap(p->p.getTags().stream()).distinct().forEach(System.out::println);
        //ditinct for unique
	}

}
